name: Quality Gate

on:
  pull_request:
    branches: [main]

jobs:
  fta-gate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Generate current complexity analysis
        run: |
          echo "üìä Generating complexity analysis for current branch..."
          pnpm run complexity:json

      - name: Generate baseline complexity analysis
        env:
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
        run: |
          echo "üìã Generating baseline complexity analysis from main branch..."
          git worktree add ../base "$BASE_SHA"
          pushd ../base
          pnpm install
          mkdir -p reports
          pnpm exec fta src --format json > reports/fta.json
          popd
          mkdir -p reports
          cp ../base/reports/fta.json reports/fta.base.json
          git worktree remove ../base --force

      - name: Identify changed TypeScript files
        id: diff
        env:
          BASE_SHA: ${{ github.event.pull_request.base.sha }}
          HEAD_SHA: ${{ github.event.pull_request.head.sha }}
        run: |
          echo "üîç Identifying changed TypeScript files..."
          CHANGED=$(git diff --name-only "$BASE_SHA".."$HEAD_SHA" -- 'src/**/*.ts' 'src/**/*.tsx' | tr '\n' ',' | sed 's/,$//')
          echo "changed=$CHANGED" >> $GITHUB_OUTPUT

          if [ -n "$CHANGED" ]; then
            echo "üìù Changed TypeScript files:"
            echo "$CHANGED" | tr ',' '\n' | sed 's/^/  - /'
          else
            echo "‚úÖ No TypeScript files changed in this PR"
          fi

      - name: Run complexity threshold analysis
        env:
          FTA_HARD_CAP: ${{ vars.FTA_HARD_CAP || 50 }}
          FTA_DELTA_PCT: ${{ vars.FTA_DELTA_PCT || 10 }}
        run: |
          echo "üéØ Running complexity threshold analysis..."
          echo "Configuration:"
          echo "  - Hard cap: $FTA_HARD_CAP"
          echo "  - Delta percentage threshold: $FTA_DELTA_PCT%"
          echo ""

          if ! node scripts/compare-fta.mjs --current=reports/fta.json --base=reports/fta.base.json --changed='${{ steps.diff.outputs.changed }}'; then
            echo ""
            echo "‚ùå Quality gate failed!"
            echo ""
            echo "üí° How to fix:"
            echo "  1. Review the complexity analysis above"
            echo "  2. Consider refactoring complex functions or modules"
            echo "  3. Break down large functions into smaller, focused functions"
            echo "  4. Extract complex logic into utility functions"
            echo "  5. Add unit tests to verify refactored code behavior"
            echo ""
            echo "üîó Useful resources:"
            echo "  - Complexity guidelines: https://github.com/timfee/cep-speck/blob/main/docs/safety-manual.md"
            echo "  - Refactoring patterns: https://refactoring.guru/"
            echo ""
            echo "If you believe this threshold should be adjusted, please discuss with the team."
            exit 1
          else
            echo ""
            echo "‚úÖ Quality gate passed!"
            echo "üéâ Code complexity is within acceptable thresholds."
          fi

      - name: Upload complexity artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: complexity-analysis
          path: |
            reports/fta.json
            reports/fta.base.json
          retention-days: 7
